import matplotlib.pyplot as plt
import numpy as np
import time
import copy
import math


class Fiverow_GUI_v1():

    def __init__(self):
        self.fig = plt.figure()
        self.ax = self.fig.add_subplot(111)

        plt.axis("off")

        self.has_input = False
        self.input_coord = None

        self.fig.canvas.mpl_connect("button_press_event", self.get_on_press())
        plt.ion()

    @staticmethod
    def __cvt_tableList(tableList, p1, p2):
        """

        :param tableList: a python built-in list that generated by ChessApp/table, with elements
                            0 represents the null, p1 represents the chess of player with similar to p2
        :param p1: p1-like string
        :param p2: p2-like string
        :return:
        """
        tableList = copy.deepcopy(tableList)
        col = len(tableList)

        for i in range(col):
            for j in range(col):
                if tableList[i][j] == p1:
                    tableList[i][j] = 1
                elif tableList[i][j] == p2:
                    tableList[i][j] = 2

        return np.array(tableList)

    def get_on_press(self):

        def on_press(event):
            if event.button == 1:
                self.input_coord = [math.floor(event.xdata + 0.5) + 1, math.floor(event.ydata + 0.5) + 1]
                self.update()
                self.has_input = True
            elif event.button == 3:
                print("x, y =", event.xdata, event.ydata)

        return on_press

    def plot_table(self, tableList, p1, p2):
        np_tableList = self.__cvt_tableList(tableList, p1, p2)
        self.ax.imshow(np_tableList, cmap="Blues", vmin=0, vmax=2)

        plt.xticks(np.arange(0, np_tableList.shape[0], 1))
        plt.yticks(np.arange(0, np_tableList.shape[1], 1))

        self.ax.grid()

    def cla(self):
        self.ax.cla()

    def wait_until_hasinput(self):
        while not self.has_input:
            plt.pause(0.1)
        self.has_input = False

        return self.input_coord

    def update(self):
        self.fig.canvas.draw()


def get_inputter():
    gui_inst = Fiverow_GUI_v1()

    def gui_inputer_v1(column, table, tableList, tableStr, lastChess, currentPlayer, p1, p2, currentPlayerName, round):
        gui_inst.cla()
        gui_inst.plot_table(tableList, p1, p2)

        x, y = gui_inst.wait_until_hasinput()
        gui_inst.update()

        return [x, y]

    return gui_inputer_v1
